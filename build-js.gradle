node {
    version = '12.14.1'
    download = true
    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")

    // Set the work directory for NPM
    npmWorkDir = file("${project.buildDir}/npm")

    // Set the work directory for Yarn
    yarnWorkDir = file("${project.buildDir}/yarn")
}

task yarn_build(type: YarnTask, dependsOn: 'yarn_install') {
    inputs.dir "${ project.projectDir }/src/main/resources/src"
    outputs.dir "${ project.projectDir }/src/main/resources/static/js/build"
    args = ['build']
}

task yarn_build_dev(type: YarnTask, dependsOn: 'yarn_install') {
    inputs.dir "${ project.projectDir }/src/main/resources/src"
    outputs.dir "${ project.projectDir }/src/main/resources/static/js/build"
    args = ['build-dev']
}

task yarn_watch(type: YarnTask, dependsOn: 'yarn_install') {
    inputs.dir "${ project.projectDir }/src/main/resources/src"
    outputs.dir "${ project.projectDir }/src/main/resources/static/js/build"
    args = ['watch']
}

task copyResources(type: Copy) {
    def sourceFolder = "${ project.projectDir }/src/main/resources/static/js/build"
    def destinationFolder = "${ project.buildDir }/resources/main/static/js/build"
    inputs.dir sourceFolder
    outputs.dir destinationFolder
    from sourceFolder
    into destinationFolder
}

task copyResourcesDev(type: Copy) {
    def sourceFolder = "${ project.projectDir }/src/main/resources/static/js/build"
    def destinationFolder = "out/production/resources/static/js/build"
    inputs.dir sourceFolder
    outputs.dir destinationFolder
    from sourceFolder
    into destinationFolder
}

task cleanResources(type: Delete) {
    delete "${ project.projectDir }/src/main/resources/static/js/build"
}

processResources.dependsOn yarn_build_dev
copyResources.dependsOn yarn_build
copyResourcesDev.dependsOn yarn_build_dev
bootJar.dependsOn copyResources
clean.dependsOn cleanResources
